package com.example.review.model;
import java.util.Scanner;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

public class CommentSystem {
    private Map<String, Comment> commentIdMap;

    public CommentSystem() {
        commentIdMap = new HashMap<>();
    }
    public String getEmotionFromLabel(String label) {
        if (label.equalsIgnoreCase("exited")) {
            return "üòê";
        } else if (label.equalsIgnoreCase("normal")) {
            return "üòä";
        } else if (label.equalsIgnoreCase("disappointed")) {
            return "üòû";
        } else {
            return "üòê"; // Default emoji
        }
    }
    public void addComment(String userId, String commentText) {
        String commentId = generateCommentId(userId);
        Comment comment = new Comment(userId, commentText, commentId, new Date());
        commentIdMap.put(commentId, comment);
    }

    public void printAllComments() {
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

        for (Map.Entry<String, Comment> entry : commentIdMap.entrySet()) {
            Comment comment = entry.getValue();
            System.out.println(comment.getCommentId() + ": " + comment.getCommentText() +
                    " (–û—Ä—É—É–ª—Å–∞–Ω: " + comment.getUserId() + ") "+
                    " - –û—Ä—É—É–ª—Å–∞–Ω –æ–≥–Ω–æ–æ: " + dateFormat.format(comment.getCommentDate()) );
        }
    }

    private String generateCommentId(String userId) {
        return userId + "_" + System.currentTimeMillis();
    }

    public static void main(String[] args) {
        CommentSystem commentSystem = new CommentSystem();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("–ú”©–Ω”©:");
            System.out.println("1. –ö–æ–º–º–µ–Ω—Ç –Ω—ç–º—ç—Ö");
            System.out.println("2. –ë“Ø—Ö –ö–æ–º–º–µ–Ω—Ç—ã–≥ —Ö–∞—Ä–∞—Ö");
            System.out.println("3. –≠–º–æ–∂–∏ “Ø–ª–¥—ç—ç—Ö");
            System.out.println("4. –ì–∞—Ä–∞—Ö");
            System.out.print("–¢–∞–Ω—ã —Å–æ–Ω–≥–æ–ª—Ç—ã–≥ –æ—Ä—É—É–ª–Ω–∞ —É—É: ");

            int choice = scanner.nextInt();
            scanner.nextLine();

            switch (choice) {
                case 1:
                    System.out.print("–¢–∞–Ω—ã —Ö—ç—Ä—ç–≥–ª—ç–≥—á–∏–π–Ω ID-–≥ –æ—Ä—É—É–ª–Ω–∞ —É—É: ");
                    String userId = scanner.nextLine();
                    System.out.print("–¢–∞–Ω—ã –∫–æ–º–º–µ–Ω—Ç—ã–≥ –æ—Ä—É—É–ª–Ω–∞ —É—É: ");
                    String commentText = scanner.nextLine();
                    commentSystem.addComment(userId, commentText);
                    break;
                case 2:
                    commentSystem.printAllComments();
                    break;
                // Previous code
                case 3:
                    System.out.println("3.1. exited");
                    System.out.println("3.2. normal");
                    System.out.println("3.3. disappointed");
                    System.out.print("–≠–º–æ–∂–∏ —Å–æ–Ω–≥–æ–Ω–æ —É—É (—Ö—ç—Ä—ç–≥–ª—ç–≥—á–∏–π–Ω —Ö–∞—Ä–∏—É–ª—Ç –æ—Ä—É—É–ª–Ω–∞ —É—É): ");
                    int emotionChoice = scanner.nextInt();
                    System.out.print("–¢–∞–Ω—ã —Ö—ç—Ä—ç–≥–ª—ç–≥—á–∏–π–Ω ID-–≥ –æ—Ä—É—É–ª–Ω–∞ —É—É: ");
                    String userId1 = scanner.nextLine();

                    switch (emotionChoice) {
                        case 1:
                            commentSystem.addComment(userId1, commentSystem.getEmotionFromLabel("exited"));
                            break;
                        case 2:
                            commentSystem.addComment(userId1, commentSystem.getEmotionFromLabel("normal"));
                            break;
                        case 3:
                            commentSystem.addComment(userId1, commentSystem.getEmotionFromLabel("disappointed"));
                            break;
                        default:
                            System.out.println("–ë—É—Ä—É—É —Å–æ–Ω–≥–æ–ª—Ç. –î–∞—Ö–∏–Ω –æ—Ä–æ–ª–¥–æ–Ω–æ —É—É.");
                    }
                    break;



                case 4:
                    System.out.println("–ü—Ä–æ–≥—Ä–∞–º–∞–∞—Å –≥–∞—Ä–ª–∞–∞. –ë–∞—è—Ä–ª–∞–ª–∞–∞!");
                    System.exit(0);
                default:
                    System.out.println("–ë—É—Ä—É—É —Å–æ–Ω–≥–æ–ª—Ç. –î–∞—Ö–∏–Ω –æ—Ä–æ–ª–¥–æ–Ω–æ —É—É.");
            }
        }
    }
}